<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline group="integrationframework" type="backoffice">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>Shows the overview of all created workflows.</description>
        </text-node>
        <node-display x="2" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Overview">
    <segment>
      <node>
        <start-node name="Overview" secure="false"/>
        <node-display x="2" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.object.CustomObjectMgr.queryCustomObjects('WorkflowScheduleDefinition', '', 'custom.ID', null)" key="From_0"/>
          <key-binding alias="WorkflowScheduleDefinitionsIterator" key="To_0"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.workflow.workflows" key="Form"/>
          <key-binding alias="WorkflowScheduleDefinitionsIterator" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-continue-node secure="false" start-name="Overview2" transaction-required="false">
          <template buffered="true" dynamic="false" name="workflow/overview"/>
        </interaction-continue-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="disableWorkflows">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-2"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="WorkflowUI-DisableWorkflows"/>
              <node-display x="3" y="2"/>
            </node>
            <transition target-connector="in2" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in2" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <jump-node start-name-ref="WorkflowUI-Overview"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="editWorkflow">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-2"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="TriggeredAction.object" key="From_0"/>
                <key-binding alias="WorkflowScheduleDefinition" key="To_0"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="1" y="2"/>
            </node>
            <simple-transition/>
            <node>
              <jump-node start-name-ref="WorkflowUI-EditWorkflowScheduleDefinition"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b4" source-connector="enableWorkflows">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-2"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="WorkflowUI-EnableWorkflows"/>
              <node-display x="2" y="2"/>
            </node>
            <transition target-connector="in1" target-path="../b2.2">
              <transition-display>
                <bend-point relative-to="source" x="0" y="2"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
        <branch basename="b5" source-connector="newWorkflow">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <jump-node start-name-ref="WorkflowUI-CreateWorkflowScheduleDefinition"/>
              <node-display x="0" y="3"/>
            </node>
          </segment>
        </branch>
        <branch basename="b6" source-connector="removeWorkflows">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-2"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="WorkflowUI-DeleteWorkflows"/>
              <node-display x="5" y="2"/>
            </node>
            <transition target-connector="in1" target-path="../b2.4"/>
          </segment>
        </branch>
        <branch basename="b7" source-connector="runWorkflows">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-2"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="WorkflowUI-RunWorkflows"/>
              <node-display x="4" y="2"/>
            </node>
            <transition target-connector="in2" target-path="../b2.3"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path=".">
        <transition-display>
          <bend-point relative-to="source" x="-1" y="1"/>
          <bend-point relative-to="target" x="-1" y="0"/>
        </transition-display>
      </transition>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>Opens a form for creating a new WorkflowScheduleDefinition.</description>
        </text-node>
        <node-display x="13" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_4">
    <segment>
      <node>
        <text-node>
          <description>Opens a form with filled fields for the given WorkflowScheduleDefinition.
@Input WorkflowScheduleDefinition : Object The defintion to edit.</description>
        </text-node>
        <node-display width="2" x="14" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateWorkflowScheduleDefinition">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateWorkflowScheduleDefinition" secure="false"/>
        <node-display x="13" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="WorkflowUI-InitializeWorkflowForm"/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="5"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="0"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-continue-node secure="false" start-name="EditWorkflowScheduleDefinition2" transaction-required="false">
          <template buffered="true" dynamic="false" name="workflow/workflow"/>
        </interaction-continue-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="applyWorkflow">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="dw.object.CustomObjectMgr.getCustomObject('WorkflowScheduleDefinition', CurrentForms.workflow.workflow.id.value)" key="From_0"/>
                <key-binding alias="WorkflowScheduleDefinition" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="!empty(WorkflowScheduleDefinition) &amp;&amp; empty(CurrentForms.workflow.workflow.object)" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="InvalidateFormElement" pipelet-set-identifier="bc_api">
                      <key-binding alias="CurrentForms.workflow.workflow.id" key="FormElement"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../+2/b2.2">
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="2"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <simple-transition transaction-control="begin">
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="empty(WorkflowScheduleDefinition)" condition-operator="expr"/>
              <node-display x="1" y="1"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="true"/>
                      <key-binding alias="dw.object.CustomObjectMgr.createCustomObject('WorkflowScheduleDefinition', CurrentForms.workflow.workflow.id.value)" key="From_0"/>
                      <key-binding alias="WorkflowScheduleDefinition" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
                <bend-point relative-to="target" x="1" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="2"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="UpdateObjectWithForm" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.workflow.workflow" key="Form"/>
                <key-binding alias="WorkflowScheduleDefinition" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="./b3.1">
                  <transition-display>
                    <bend-point relative-to="target" x="0" y="-2"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="UpdateObjectWithForm" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.workflow.workflow[CurrentForms.workflow.workflow.type.value]" key="Form"/>
                <key-binding alias="WorkflowScheduleDefinition" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="error">
                <transition target-connector="in2"/>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="2" y="0"/>
                  </node>
                  <transition target-connector="in2" target-path="../+2" transaction-control="rollback">
                    <transition-display>
                      <bend-point relative-to="target" x="2" y="0"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="workflow/TransformWorkflowDates.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="CurrentForms" key="CurrentForms"/>
                <key-binding alias="false" key="UpdateForm"/>
                <key-binding alias="WorkflowScheduleDefinition" key="WorkflowScheduleDefinition"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b4" source-connector="error">
                <transition target-connector="in3" target-path="./+1/b2.1"/>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="workflow/UpdateWorkflowScheduleDefinition.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="CurrentHttpParameterMap.executionWeekdays.stringValues" key="ExecutionWeekdays"/>
                <key-binding alias="CurrentHttpParameterMap.siteIds.stringValues" key="SiteIds"/>
                <key-binding alias="CurrentHttpParameterMap.notificationStatuses.stringValues" key="NotificationStatuses"/>
                <key-binding alias="CurrentHttpParameterMap.notificationEmails.stringValues" key="NotificationEmails"/>
                <key-binding alias="WorkflowScheduleDefinition" key="WorkflowScheduleDefinition"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b5" source-connector="error">
                <transition target-connector="in2" target-path="./+1">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                    <bend-point relative-to="target" x="1" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="-1" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="workflow/SetRelatedWorkflowComponentDefinitions.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="CurrentHttpParameterMap" key="CurrentHttpParameterMap"/>
                <key-binding alias="WorkflowScheduleDefinition" key="WorkflowScheduleDefinition"/>
                <key-binding alias="WorkflowScheduleDefinition.custom.ID" key="WorkflowScheduleDefinitionID"/>
                <key-binding alias="ErrorMap" key="ErrorMap"/>
                <key-binding alias="WorkflowScheduleDefinitionWorkflowComponentDefinitionRelations" key="InvalidWorkflowScheduleDefinitionWorkflowComponentDefinitionRelations"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                    <bend-point relative-to="source" x="-1" y="1"/>
                    <bend-point relative-to="source" x="-2" y="1"/>
                    <bend-point relative-to="source" x="-2" y="-1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="-1" y="-3"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1" transaction-control="rollback">
                    <transition-display>
                      <bend-point relative-to="source" x="-2" y="0"/>
                    </transition-display>
                  </transition>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="-1" y="-4"/>
                  </node>
                  <transition target-connector="in1" target-path="../../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1" transaction-control="commit">
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <jump-node start-name-ref="WorkflowUI-EditWorkflowScheduleDefinition"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="runWorkflow">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="([CurrentForms.workflow.workflow.id.value])" key="From_0"/>
                <key-binding alias="WorkflowIDsToRun" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="3" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="WorkflowUI-RunWorkflows"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <jump-node start-name-ref="WorkflowUI-EditWorkflowScheduleDefinition"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="0"/>
      </node>
      <transition target-connector="in1" target-path="./-2"/>
    </segment>
  </branch>
  <branch basename="EditWorkflowScheduleDefinition">
    <segment>
      <node>
        <start-node call-mode="private" name="EditWorkflowScheduleDefinition" secure="false"/>
        <node-display x="14" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="WorkflowUI-InitializeWorkflowForm"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.object.CustomObjectMgr.queryCustomObjects('WorkflowScheduleDefinitionWorkflowComponentDefinitionRelation', 'custom.workflowScheduleDefinitionID = {0}', 'custom.position', WorkflowScheduleDefinition.custom.ID)" key="From_0"/>
          <key-binding alias="WorkflowScheduleDefinitionWorkflowComponentDefinitionRelations" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.workflow.workflow" key="Form"/>
          <key-binding alias="WorkflowScheduleDefinition" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.workflow.workflow[WorkflowScheduleDefinition.custom.type]" key="Form"/>
          <key-binding alias="WorkflowScheduleDefinition" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="workflow/TransformWorkflowDates.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentForms" key="CurrentForms"/>
          <key-binding alias="true" key="UpdateForm"/>
          <key-binding alias="WorkflowScheduleDefinition" key="WorkflowScheduleDefinition"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="/CreateWorkflowScheduleDefinition.3">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="/CreateWorkflowScheduleDefinition.3"/>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_7">
    <segment>
      <node>
        <text-node>
          <description>Initializes the form for a WorkflowScheduleDefintion.</description>
        </text-node>
        <node-display x="20" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_8">
    <segment>
      <node>
        <text-node>
          <description>Returns the dynamic data object for a component row.</description>
        </text-node>
        <node-display x="23" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="InitializeWorkflowForm">
    <segment>
      <node>
        <start-node call-mode="private" name="InitializeWorkflowForm" secure="false"/>
        <node-display x="20" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.workflow.workflow" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Get TypeEnumValues" pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="workflow/GetObjectTypeDefinitionValues.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="&quot;WorkflowScheduleDefinition&quot;" key="CustomObjectType"/>
          <key-binding alias="&quot;type&quot;" key="Attribute"/>
          <key-binding alias="TypeEnumValues" key="EnumValues"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Get IntervalTypeEnumValues" pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="workflow/GetObjectTypeDefinitionValues.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="&quot;WorkflowScheduleDefinition&quot;" key="CustomObjectType"/>
          <key-binding alias="&quot;executionIntervalType&quot;" key="Attribute"/>
          <key-binding alias="IntervalTypeEnumValues" key="EnumValues"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Get IntervalTypeEnumValues" pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="workflow/GetObjectTypeDefinitionValues.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="&quot;WorkflowScheduleDefinition&quot;" key="CustomObjectType"/>
          <key-binding alias="&quot;notificationMode&quot;" key="Attribute"/>
          <key-binding alias="NotificationModeEnumValues" key="EnumValues"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in3" target-path="../+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="2"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="SetFormOptions" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.workflow.workflow.type" key="FormField"/>
          <key-binding alias="TypeEnumValues" key="Options"/>
          <key-binding alias="null" key="Begin"/>
          <key-binding alias="null" key="End"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="SetFormOptions" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.workflow.workflow.RECURRING.executionIntervalType" key="FormField"/>
          <key-binding alias="IntervalTypeEnumValues" key="Options"/>
          <key-binding alias="null" key="Begin"/>
          <key-binding alias="null" key="End"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="SetFormOptions" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.workflow.workflow.notificationMode" key="FormField"/>
          <key-binding alias="NotificationModeEnumValues" key="Options"/>
          <key-binding alias="null" key="Begin"/>
          <key-binding alias="null" key="End"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.object.CustomObjectMgr.queryCustomObjects('WorkflowComponentDefinition', '', 'custom.name', null).asList()" key="From_0"/>
          <key-binding alias="WorkflowComponentDefinitions" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="WorkflowScheduleDefinitionWorkflowComponentDefinitionRelations" key="To_1"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetDynamicComponentData">
    <segment>
      <node>
        <start-node name="GetDynamicComponentData" secure="false"/>
        <node-display x="23" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.object.CustomObjectMgr.queryCustomObjects('WorkflowComponentDefinition', '', 'custom.name', null).asList()" key="From_0"/>
          <key-binding alias="WorkflowComponentDefinitions" key="To_0"/>
          <key-binding alias="CurrentHttpParameterMap.Index.intValue" key="From_1"/>
          <key-binding alias="Index" key="To_1"/>
          <key-binding alias="dw.object.CustomObjectMgr.getCustomObject('WorkflowComponentDefinition', CurrentHttpParameterMap.selectedWorkflowComponentDefinitionID.stringValue)" key="From_2"/>
          <key-binding alias="WorkflowComponentDefinition" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="workflow/dynamiccomponentdata"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_11">
    <segment>
      <node>
        <text-node>
          <description>Shows the workflow plan for a given date range.</description>
        </text-node>
        <node-display x="26" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="WorkflowPlan">
    <segment>
      <node>
        <start-node name="WorkflowPlan" secure="false"/>
        <node-display x="26" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="bc_integrationframework:workflow/GetLibWorkflow.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="LibWorkflow" key="LibWorkflow"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!CurrentHttpParameterMap.showAllRunningInstances.submitted" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="new dw.util.Calendar()" key="From_0"/>
                <key-binding alias="TimeFrom" key="To_0"/>
                <key-binding alias="DoIt" key="To_1"/>
                <key-binding alias="TimeFrom.setTimeZone(dw.system.System.getInstanceTimeZone())" key="From_1"/>
                <key-binding alias="DoIt" key="To_2"/>
                <key-binding alias="(empty(CurrentHttpParameterMap.dateFrom.dateValue) ? new Date() : TimeFrom.setTime(CurrentHttpParameterMap.dateFrom.dateValue))" key="From_2"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="WorkflowPlan" key="To_0"/>
          <key-binding alias="LibWorkflow.getWorkflowPlanForRunningInstances()" key="From_0"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="workflow/workflowplan"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_13">
    <segment>
      <node>
        <text-node>
          <description>Returns the workflows as JSON</description>
        </text-node>
        <node-display x="29" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_14">
    <segment>
      <node>
        <text-node>
          <description>Returns one workflow including components as JSON</description>
        </text-node>
        <node-display x="31" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="WorkflowJSON">
    <segment>
      <node>
        <start-node name="WorkflowJSON" secure="false"/>
        <node-display x="29" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Get filters" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.filter.submitted?JSON.parse(CurrentHttpParameterMap.filter.stringValue):[]" key="From_0"/>
          <key-binding alias="Filters" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="bc_integrationframework:workflow/GetLibWorkflow.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="LibWorkflow" key="LibWorkflow"/>
        </pipelet-node>
        <node-display x="0" y="2"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!CurrentHttpParameterMap.showAllRunningInstances.submitted" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="new dw.util.Calendar()" key="From_0"/>
                <key-binding alias="TimeFrom" key="To_0"/>
                <key-binding alias="DoIt" key="To_1"/>
                <key-binding alias="TimeFrom.setTimeZone(dw.system.System.getInstanceTimeZone())" key="From_1"/>
                <key-binding alias="DoIt" key="To_2"/>
                <key-binding alias="(empty(CurrentHttpParameterMap.dateFrom.stringValue) ? new Date() : TimeFrom.parseByFormat(CurrentHttpParameterMap.dateFrom.stringValue,'MM/dd/yyyy'))" key="From_2"/>
                <key-binding alias="WorkflowPlan" key="To_3"/>
                <key-binding alias="LibWorkflow.getWorkflowPlanForOverview(TimeFrom)" key="From_3"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="WorkflowPlan" key="To_0"/>
          <key-binding alias="LibWorkflow.getWorkflowPlanForRunningInstances()" key="From_0"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="workflow/GetWorkflows.ds"/>
          <config-property key="Timeout" value="60"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="JSONData" key="Workflows"/>
          <key-binding alias="WorkflowPlan" key="WorkflowPlan"/>
          <key-binding alias="Workflows" key="Schedules"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="common/json"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="WorkflowDetailsJSON">
    <segment>
      <node>
        <start-node name="WorkflowDetailsJSON" secure="false"/>
        <node-display x="31" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="bc_integrationframework:workflow/GetLibWorkflow.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="LibWorkflow" key="LibWorkflow"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="workflow/GetWorkflow.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="LibWorkflow" key="LibWorkflow"/>
          <key-binding alias="CurrentHttpParameterMap.plannedStart.stringValue" key="PlannedStart"/>
          <key-binding alias="CurrentHttpParameterMap.workflowId.stringValue" key="WorkflowDefinitionId"/>
          <key-binding alias="CurrentHttpParameterMap.siteId.stringValue" key="SiteId"/>
          <key-binding alias="JSONData" key="Workflow"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="common/json"/>
        </interaction-node>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_17">
    <segment>
      <node>
        <text-node>
          <description>Enables all workflows given via http parameter map.</description>
        </text-node>
        <node-display x="2" y="24"/>
      </node>
    </segment>
  </branch>
  <branch basename="EnableWorkflows">
    <segment>
      <node>
        <start-node call-mode="private" name="EnableWorkflows" secure="false"/>
        <node-display x="2" y="25"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="!empty(CurrentHttpParameterMap.workflowId.stringValues)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <loop-node element-key="WorkflowScheduleDefinitionId" iterator-key="CurrentHttpParameterMap.workflowId.stringValues"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="do">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="true"/>
                      <key-binding alias="dw.object.CustomObjectMgr.getCustomObject('WorkflowScheduleDefinition', WorkflowScheduleDefinitionId)" key="From_0"/>
                      <key-binding alias="WorkflowScheduleDefinition" key="To_0"/>
                      <key-binding alias="true" key="From_1"/>
                      <key-binding alias="WorkflowScheduleDefinition.custom.enabled" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="loop" target-path="..">
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                      <bend-point relative-to="source" x="-1" y="1"/>
                      <bend-point relative-to="target" x="-1" y="0"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_19">
    <segment>
      <node>
        <text-node>
          <description>Disables all workflows given via http parameter map.</description>
        </text-node>
        <node-display x="5" y="24"/>
      </node>
    </segment>
  </branch>
  <branch basename="DisableWorkflows">
    <segment>
      <node>
        <start-node call-mode="private" name="DisableWorkflows" secure="false"/>
        <node-display x="5" y="25"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="!empty(CurrentHttpParameterMap.workflowId.stringValues)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <loop-node element-key="WorkflowScheduleDefinitionId" iterator-key="CurrentHttpParameterMap.workflowId.stringValues"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="do">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="true"/>
                      <key-binding alias="dw.object.CustomObjectMgr.getCustomObject('WorkflowScheduleDefinition', WorkflowScheduleDefinitionId)" key="From_0"/>
                      <key-binding alias="WorkflowScheduleDefinition" key="To_0"/>
                      <key-binding alias="false" key="From_1"/>
                      <key-binding alias="WorkflowScheduleDefinition.custom.enabled" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="loop" target-path="..">
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                      <bend-point relative-to="source" x="-1" y="1"/>
                      <bend-point relative-to="target" x="-1" y="0"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_21">
    <segment>
      <node>
        <text-node>
          <description>Runs all workflows given via http parameter map.</description>
        </text-node>
        <node-display x="8" y="24"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_22">
    <segment>
      <node>
        <text-node>
          <description>Deletes all workflows given via http parameter map.</description>
        </text-node>
        <node-display x="11" y="24"/>
      </node>
    </segment>
  </branch>
  <branch basename="RunWorkflows">
    <segment>
      <node>
        <start-node call-mode="private" name="RunWorkflows" secure="false"/>
        <node-display x="8" y="25"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Use dictionary key if set, HTTP parameters otherwise" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="((WorkflowIDsToRun != null) ? WorkflowIDsToRun : CurrentHttpParameterMap.workflowId.stringValues)" key="From_0"/>
          <key-binding alias="WorkflowIDsToRun" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!empty(WorkflowIDsToRun)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="bc_integrationframework:workflow/GetLibWorkflow.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="LibWorkflow" key="LibWorkflow"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="new dw.util.Calendar()" key="From_0"/>
                <key-binding alias="Calendar" key="To_0"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="DoIt" key="To_1"/>
                <key-binding alias="Calendar.setTimeZone(dw.system.System.getInstanceTimeZone())" key="From_1"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <loop-node element-key="WorkflowScheduleDefinitionId" iterator-key="WorkflowIDsToRun"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="do">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="dw.object.CustomObjectMgr.getCustomObject('WorkflowScheduleDefinition', WorkflowScheduleDefinitionId)" key="From_0"/>
                      <key-binding alias="WorkflowScheduleDefinition" key="To_0"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <loop-node element-key="SiteId" iterator-key="WorkflowScheduleDefinition.custom.siteIds"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="do">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <call-node start-name-ref="Workflow-CreateWorkflowScheduleInstance"/>
                          <node-display x="0" y="1"/>
                        </node>
                        <transition target-connector="loop" target-path="..">
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                            <bend-point relative-to="source" x="-1" y="1"/>
                            <bend-point relative-to="target" x="-1" y="0"/>
                          </transition-display>
                        </transition>
                      </segment>
                    </branch>
                  </node>
                  <transition target-connector="loop" target-path="..">
                    <transition-display>
                      <bend-point relative-to="source" x="1" y="0"/>
                      <bend-point relative-to="source" x="1" y="4"/>
                      <bend-point relative-to="source" x="-2" y="4"/>
                      <bend-point relative-to="target" x="-2" y="0"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node custom-name="Run Org job" pipelet-name="RunJobNow" pipelet-set-identifier="bc_api">
                <key-binding alias="&quot;Workflow-Start-Organization-1&quot;" key="JobName"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
              <branch basename="b3" source-connector="error">
                <transition target-connector="in2" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node custom-name="Run site job" pipelet-name="RunJobNow" pipelet-set-identifier="bc_api">
                <key-binding alias="&quot;Workflow-Start-Site-1&quot;" key="JobName"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b4" source-connector="error">
                <transition target-connector="in2" target-path="../+2"/>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+3">
              <transition-display>
                <bend-point relative-to="source" x="0" y="2"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="4" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="2" y="4"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in2" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="clear WorkflowIDsToRun" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="From_0"/>
          <key-binding alias="WorkflowIDsToRun" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="DeleteWorkflows">
    <segment>
      <node>
        <start-node call-mode="private" name="DeleteWorkflows" secure="false"/>
        <node-display x="11" y="25"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!empty(CurrentHttpParameterMap.workflowId.stringValues)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <loop-node element-key="WorkflowScheduleDefinitionId" iterator-key="CurrentHttpParameterMap.workflowId.stringValues"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="do">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="true"/>
                      <config-property key="OnError" value="PIPELET_ERROR"/>
                      <config-property key="ScriptFile" value="workflow/RemoveWorkflowScheduleDefinition.ds"/>
                      <key-binding alias="ScriptLog" key="ScriptLog"/>
                      <key-binding alias="dw.object.CustomObjectMgr.getCustomObject('WorkflowScheduleDefinition', WorkflowScheduleDefinitionId)" key="WorkflowScheduleDefinition"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="loop" target-path="..">
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                      <bend-point relative-to="source" x="-1" y="1"/>
                      <bend-point relative-to="target" x="-1" y="0"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
